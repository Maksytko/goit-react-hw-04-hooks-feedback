{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","logo.svg","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Feedback/Feedback.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","className","style","list","FeedbackOptions","options","onLeaveFeedback","map","option","buttonFeedback","type","onClick","name","Section","title","children","section","Feedback","useState","setGood","setNeutral","setBad","countTotalFeedback","event","target","Math","floor","countPositiveFeedbackPercentage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,eAAiB,0C,gBCAnCD,EAAOC,QAAU,CAAC,QAAU,2B,0HCDb,I,mBCUAC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,K,gBC8BEC,MA7Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,gCACE,2CACCD,EAAQ,EACP,gCACE,qBAAIE,UAAWC,IAAMC,KAArB,UACE,wCAAWP,KACX,2CAAcC,KACd,uCAAUC,QAEZ,wCAAWC,KACX,oDAAuBC,EAAvB,UAGF,cAAC,EAAD,CAAcN,QAAQ,0B,gBCSfU,MAzBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAACC,GACZ,OACE,wBACEP,UAAWC,IAAMO,eAEjBC,KAAK,SACLC,QAASL,EACTM,KAAMJ,EALR,SAOGA,GALIA,S,gBCMFK,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASd,UAAWC,IAAMc,QAA1B,UACE,4BAAIF,IACHC,MC2CQE,MA7Cf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBuB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOpB,EAAP,KAAYuB,EAAZ,KAEA,SAASC,IACP,OAAO1B,EAAOC,EAAUC,EAqB1B,OACE,eAAC,EAAD,CAASgB,MAAM,wBAAf,UACE,cAAC,EAAD,CACET,QAAS,CAACT,EAAMC,EAASC,GACzBQ,gBAjBN,SAAyBiB,GACvB,OAAQA,EAAMC,OAAOZ,MACnB,IAAK,OACH,OAAOO,EAAQvB,EAAO,GACxB,IAAK,UACH,OAAOwB,EAAWvB,EAAU,GAC9B,IAAK,MACH,OAAOwB,EAAOvB,EAAM,GACtB,QACE,WAWF,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,IACPtB,mBA9BN,WACE,IAAMD,EAAQuB,IACd,OAAOG,KAAKC,MAAc,IAAP9B,EAAcG,GA4BT4B,SChCbC,MARf,WACE,OACE,qBAAK3B,UAAU,MAAf,SACE,cAAC,EAAD,OCKS4B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1a3da7b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3KUsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonFeedback\":\"FeedbackOptions_buttonFeedback__iJqHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__VitKA\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import propTypes from \"prop-types\";\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: propTypes.string,\n};\n\nexport default Notification;\n","import Notification from \"../Notification/Notification\";\nimport propTypes from \"prop-types\";\nimport style from \"./Statistics.module.css\";\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div>\n      <p>Statistics</p>\n      {total > 0 ? (\n        <div>\n          <ul className={style.list}>\n            <li>Good: {good}</li>\n            <li>Neutral: {neutral}</li>\n            <li>Bad: {bad}</li>\n          </ul>\n          <p>Total: {total}</p>\n          <p>Positive feedback: {positivePercentage}%</p>\n        </div>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: propTypes.number,\n  neutral: propTypes.number,\n  bad: propTypes.number,\n  total: propTypes.number,\n  positivePercentage: propTypes.number,\n};\n\nexport default Statistics;\n","import propTypes from \"prop-types\";\nimport style from \"./FeedbackOptions.module.css\";\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div>\n      {options.map((option) => {\n        return (\n          <button\n            className={style.buttonFeedback}\n            key={option}\n            type=\"button\"\n            onClick={onLeaveFeedback}\n            name={option}\n          >\n            {option}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: propTypes.arrayOf(propTypes.string),\n  onLeaveFeedback: propTypes.func,\n};\n\nexport default FeedbackOptions;\n","import propTypes from \"prop-types\";\nimport style from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section className={style.section}>\n      <p>{title}</p>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: propTypes.string,\n};\n\nexport default Section;\n","import { useState } from \"react\";\nimport Statistics from \"../Statistics/Statistics\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Section from \"../Section/Section\";\n\nfunction Feedback() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  function countTotalFeedback() {\n    return good + neutral + bad;\n  }\n\n  function countPositiveFeedbackPercentage() {\n    const total = countTotalFeedback();\n    return Math.floor((good * 100) / total);\n  }\n\n  function onLeaveFeedback(event) {\n    switch (event.target.name) {\n      case \"good\":\n        return setGood(good + 1);\n      case \"neutral\":\n        return setNeutral(neutral + 1);\n      case \"bad\":\n        return setBad(bad + 1);\n      default:\n        return;\n    }\n  }\n\n  return (\n    <Section title=\"Please leave feedback\">\n      <FeedbackOptions\n        options={[good, neutral, bad]}\n        onLeaveFeedback={onLeaveFeedback}\n      />\n\n      <Statistics\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={countTotalFeedback()}\n        positivePercentage={countPositiveFeedbackPercentage()}\n      />\n    </Section>\n  );\n}\n\nexport default Feedback;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Feedback from \"./components/Feedback/Feedback\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}